<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cyber Threat Intelligence (網路威脅情資) | 資訊分享平台</title>
    <link>http://localhost:1313/cs/cti/index.html</link>
    <description>網路威脅情資 威脅情資 (Cyber Threat Intelligence, CTI)，也稱為網路威脅情資或資安情資，是指與網路攻擊相關的資訊，經由專業團隊收集、轉換、分析、解釋等處理過程，提供資安決策所需的基礎。在現今的網路戰爭中，威脅情資對企業的資安防禦布局至關重要。透過威脅情資，企業能夠有效規劃資安防禦計畫，包括資安意識教育、資安解決方案的導入、資訊系統設定的調整，並區分輕重緩急，分配預算。&#xA;威脅情資可分為三個層次，每個層次都對企業的資安計畫帶來效益：&#xA;戰略型威脅情資（Strategic Threat Intelligence）：無技術細節，由高階主管使用，用於辨別攻擊者的動機和目的。 實戰型威脅情資（Operational Threat Intelligence）：需要技術背景，由安全運營中心（SOC）主管和分析研究員使用，用於理解攻擊者的戰術、技術和流程。 戰術型威脅情資（Tactical Threat Intelligence）：需要技術背景，通常由SOC人員使用，以入侵指標（IoC）監控特定攻擊事件。</description>
    <generator>Hugo</generator>
    <language>zh-TW</language>
    <lastBuildDate>Thu, 10 Jul 2025 14:43:59 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/cs/cti/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dependency Track 20250710</title>
      <link>http://localhost:1313/cs/cti/dependency-track-20250710/index.html</link>
      <pubDate>Thu, 10 Jul 2025 14:43:59 +0800</pubDate>
      <guid>http://localhost:1313/cs/cti/dependency-track-20250710/index.html</guid>
      <description></description>
    </item>
    <item>
      <title>Dependency Check</title>
      <link>http://localhost:1313/cs/cti/dependency-check-20250708/index.html</link>
      <pubDate>Tue, 08 Jul 2025 16:41:25 +0800</pubDate>
      <guid>http://localhost:1313/cs/cti/dependency-check-20250708/index.html</guid>
      <description>安裝 Dependency-Check 下載執行檔 https://owasp.org/www-project-dependency-check/ 下載後，解壓縮&#xA;tar -xvf dependency-check-12.1.0-release.zip&#xD;如：解壓縮到 c:\tools\dependency-check&#xA;備註：也可透過如Maven Plugin，透過 Maven 下載&#xA;參數說明 Windows&#xA;dependency-check.bat --project &#34;My App Name&#34; --scan &#34;c:\java\application\lib&#34;&#xD;*nix&#xA;dependency-check.sh --project &#34;My App Name&#34; --scan &#34;/java/application/lib&#34;&#xD;To view the command line arguments, see the arguments page&#xA;執行 透過命令列執行：&#xA;c:\tools\dependency-check\bin\dependency-check --scan . --format HTML --project &#34;ecp-8504&#34; --out /report --nvdApiKey &#34;YOUR_NVD_API_KEY&#34;&#xD;短參數 參數名稱 參數格式 說明 是否必要 –project project &lt;name&gt; 專案名稱，會顯示在掃描報告中。 選填 -s / –scan scan &lt;path&gt; 掃描路徑，可多次指定。支援 Ant 格式路徑（如 &#39;directory/**/*.jar&#39;），建議使用單引號以避免 shell 替換（參考 issue #1812）。 通常必填 -f / –format format &lt;format&gt; 輸出格式，可指定多個格式（HTML、XML、CSV、JSON、JUNIT、SARIF、JENKINS、GITLAB、ALL），預設為 HTML。 選填 -o / –out out &lt;path&gt; 輸出報告的資料夾路徑，預設為目前目錄。若格式非 ALL，可指定檔案名稱。 選填 –nvdApiKey nvdApiKey &lt;apiKey&gt; 用於存取 NVD API 的金鑰，可由 https://nvd.nist.gov/developers/request-an-api-key 申請。 選填 NVD API 金鑰 NVD API 的金鑰，可由 https://nvd.nist.gov/developers/request-an-api-key 申請 在執行時，如使用 API KEY，下載速度，會快於沒使用 API KEY 在執行時，NVD的資料庫，也會有更新，並會存放於dependency-check的data資料夾中</description>
    </item>
  </channel>
</rss>